; PyCBC configuration for BNS-NSBH-BBH search on ER8
; 2015 Tito Dal Canton
;
; Tests and decisions for some of the parameters in this configuration file
; are documented here:
; https://www.lsc-group.phys.uwm.edu/ligovirgo/cbcnote/NSBH/MDC1_Results/AEI_PyCBC_Runs
; https://www.lsc-group.phys.uwm.edu/ligovirgo/cbcnote/NSBH/offline_pycbc_search
; https://www.lsc-group.phys.uwm.edu/ligovirgo/cbcnote/ER7/pycbc_offline
; https://www.lsc-group.phys.uwm.edu/ligovirgo/cbcnote/ER8/pycbc_offline
;
; Use ligo.dev.o1.cbc.nsbh.pycbcoffline when submitting with pycbc_submit_dax.

[workflow]
; https://ldas-jobs.ligo.caltech.edu/~cbc/docs/pycbc/workflow/initialization.html
file-retention-level = all_triggers

[workflow-datafind]
; See https://ldas-jobs.ligo.caltech.edu/~cbc/docs/pycbc/workflow/datafind.html
datafind-method = AT_RUNTIME_SINGLE_FRAMES

; FIXME currently set to update_times because some frames seem to be missing on
; Atlas. Reset to raise_error when that's debugged
datafind-check-segment-gaps = update_times
datafind-check-frames-exist = raise_error

; FIXME currently set to warn because it's failing on Atlas.
; Reset to raise_error when that's debugged
datafind-check-segment-summary = warn

[workflow-segments]
; See https://ldas-jobs.ligo.caltech.edu/~cbc/docs/pycbc/workflow/segments.html
segments-method = ALL_SINGLE_IFO_TIME

[workflow-tmpltbank]
; See https://ldas-jobs.ligo.caltech.edu/~cbc/docs/pycbc/workflow/template_bank.html
tmpltbank-method = PREGENERATED_BANK
; preliminary Ã¼berbank up to 100 total mass
; FIXME use bank built with actual ER8 PSD
tmpltbank-pregenerated-bank = /home/tito/er8/bank/H1L1-UBERBANK_MAXM100_NS0p05_ER7HMPSD-1000000000-50000.xml.gz

[workflow-splittable]
; Split bank to avoid long inspiral jobs
splittable-method = IN_WORKFLOW
splittable-num-banks = 20
splittable-exe-tag = splitbank

[workflow-matchedfilter]
; See https://ldas-jobs.ligo.caltech.edu/~cbc/docs/pycbc/workflow/matched_filter.html
matchedfilter-method = WORKFLOW_INDEPENDENT_IFOS
analysis-length = 4096
min-analysis-segments = 15
max-analysis-segments = 15
output-type = hdf

[workflow-coincidence]
background-bins = bns:chirp:1.74 edge:SEOBNRv2Peak:220 bulk:total:150

[workflow-coincidence-full]
parallelization-factor = 20

[workflow-coincidence-inj]
parallelization-factor = 5

[executables]
; location of executables
inspiral = ${which:pycbc_inspiral}
splitbank = ${which:pycbc_splitbank}

; these versions use the new DQ API
segment_query = ${which:ligolw_segment_query_dqsegdb}
segments_from_cats = ${which:ligolw_segments_from_cats_dqsegdb}

llwadd = ${which:ligolw_add}
ligolw_combine_segments = ${which:ligolw_combine_segments}
; HDF coinc execs
bank2hdf = ${which:pycbc_coinc_bank2hdf}
trig2hdf = ${which:pycbc_coinc_trig2hdf}
hdfinjfind = ${which:pycbc_coinc_hdfinjfind}
coinc = ${which:pycbc_coinc_findtrigs}
statmap = ${which:pycbc_coinc_statmap}
statmap_inj = ${which:pycbc_coinc_statmap_inj}
hdf_trigger_merge = ${which:pycbc_coinc_mergetrigs}
foreground_censor = ${which:pycbc_foreground_censor}
calculate_psd = ${which:pycbc_calculate_psd}
distribute_background_bins = ${which:pycbc_distribute_background_bins}
combine_statmap = ${which:pycbc_combine_statmap}

[llwadd]

[segments_from_cats]

[ligolw_combine_segments]

[splitbank]
; options for bank splitting job
random-sort =
random-seed = 666

[inspiral]
; parameters for matched filtering

; amount of buffer data for letting filters settle
pad-data = 8

; conditioning high-pass filter
strain-high-pass = 20

; working sample rate for matched filtering
sample-rate = 2048

; segmentation of the data
; start-pad must be long enough to contain a full BNS signal
segment-length = 256
segment-start-pad = 112
segment-end-pad = 16

; estimation of the noise PSD and construction of the whitening filter
psd-estimation = median
psd-segment-length = 16
psd-segment-stride = 8
psd-inverse-length = 16

; starting frequency of matched filter integration
low-frequency-cutoff = 30

; template approximant
; switch to SEOBNRv2 templates as soon as we can (M >= 4)
approximant = '""''SPAtmplt'' if (params.mass1 + params.mass2) < 4 else ''SEOBNRv2_ROM_DoubleSpin''""'
order = -1

; threshold for generating triggers
snr-threshold = 5.5

; method for clustering triggers over time
cluster-method = window
cluster-window = 4

; signal-based vetoes
chisq-bins = '0.4*get_freq(''fSEOBNRv2Peak'',params.mass1,params.mass2,params.spin1z,params.spin2z)**(2./3.)'
newsnr-threshold = 5

; options for reducing the computational cost and storage
filter-inj-only = 
injection-window = 4.5
processing-scheme = mkl

[inspiral-h1]
; Hanford specific matched-filter parameters
channel-name = ${workflow|h1-channel-name}
#gating-file = /home/tito/er7/H1-gating_SNR300-1117324816-1036800.txt

[inspiral-l1]
; Livingston specific matched-filter parameters
channel-name = ${workflow|l1-channel-name}
#gating-file = /home/tito/er7/L1-gating_SNR300-1117324816-1036800.txt

[pegasus_profile-calculate_psd]
condor|request_cpus = ${calculate_psd|cores}

[calculate_psd]
cores = 8
low-frequency-cutoff = ${inspiral|low-frequency-cutoff}
pad-data = ${inspiral|pad-data}
strain-high-pass = ${inspiral|strain-high-pass}
sample-rate = ${inspiral|sample-rate}
segment-length = ${inspiral|segment-length}
segment-start-pad = ${inspiral|segment-start-pad}
segment-end-pad = ${inspiral|segment-end-pad}
psd-estimation = ${inspiral|psd-estimation}
psd-segment-length = ${inspiral|psd-segment-length}
psd-segment-stride = ${inspiral|psd-segment-stride}

[calculate_psd-h1]
channel-name = ${workflow|h1-channel-name}
#gating-file = ${inspiral-h1|gating-file}

[calculate_psd-l1]
channel-name = ${workflow|l1-channel-name}
#gating-file = ${inspiral-l1|gating-file}

[hdf_trigger_merge]

[bank2hdf]

[trig2hdf]

[coinc]
coinc-threshold = 0.005
ranking-statistic = newsnr
strict-coinc-time =

[coinc-full]
timeslide-interval = 0.2
decimation-factor = 1000
loudest-keep = 500

[coinc-fullinj&coinc-injfull]
timeslide-interval = ${coinc-full|timeslide-interval}
loudest-keep-value = 8.5
cluster-window = ${statmap|cluster-window}

[coinc-inj]
; not sure what this controls

[coinc-injinj]
; not sure what this controls

[statmap&statmap_inj]
veto-window = 0.100
cluster-window = 10.0

[combine_statmap]
cluster-window = ${statmap|cluster-window}

[foreground_censor]
strict-coinc-time =

[hdfinjfind]
injection-window = 2.0



